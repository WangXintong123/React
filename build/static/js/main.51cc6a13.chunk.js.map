{"version":3,"sources":["Hoc/Hoc.js","Context/Context.js","Context/Child.js","Context/Parent.js","Sider.js","App.js","ShowTime.js","ToDoList/Todoing.js","ToDoList/Todoinput.js","Portal/Portal.js","ToDoList/Todolist.js","Request.js","Work1/TodoChild.js","Portal/ParentPortal.js","Work1/TodoInput.js","Work1/TodoList.js","index.js"],"names":["url","hoc","Com","title","Fetch","state","data","fetch","method","then","res","json","console","log","setState","result","this","props","Component","displayName","name","getDisplayName","Music","a","map","item","Music2","Mymusic","Mymusic2","Hoc","b","con2","React","createContext","Child","context","contextType","Parent","time","Date","toLocaleString","timeId","setInterval","clearInterval","Sider","style","float","block","type","to","Todoing","delItem","index","e","del","todo","key","onClick","bind","defaultProps","Todoinput","handleChange","target","parseInt","value","handleInput","keyCode","add","inputValue","c","focus","htmlFor","className","ref","inp","onChange","onKeyDown","id","color","fontSize","Portal","handleClick","ReactDom","createPortal","document","body","TodoChild","changeUl","change","class","done","checked","TodoInput","placeholder","TodoParent","addItem","dataObj","splice","JSON","parse","localStorage","getItem","setItem","stringify","forEach","ele","ReactDOM","render","getElementById"],"mappings":"kRAEIA,EAAI,sDAIR,SAASC,EAAIC,EAAIF,EAAIG,GAAO,IAClBC,EADiB,YAEnB,aAAc,IAAD,8BACT,+CACKC,MAAM,CACPC,KAAK,IAHA,EAFM,iFAQC,IAAD,OASfC,MAAMP,EAAI,CAACQ,OAAO,SAASC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAAQF,MAAK,SAACC,GACrDE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CACVR,KAAKI,EAAIK,cApBF,+BAyBf,OAAQ,6BACJ,2BAAIZ,GAEJ,kBAACD,EAAD,iBAASc,KAAKC,MAAd,CAAqBX,KAAMU,KAAKX,MAAMC,aA5B3B,GACHY,aAkCpB,OAFAd,EAAMe,YAAN,gBApCJ,SAAwBjB,GACpB,OAAQA,EAAIiB,aAAejB,EAAIkB,MAAQ,YAmCZC,CAAenB,GAA1C,KAEOE,E,IAGLkB,E,iLAEE,OACI,4BACI,4BAAKN,KAAKC,MAAMM,GAEZP,KAAKC,MAAMX,KAAKkB,KACZ,SAACC,GAAD,OAAQ,4BAAKA,EAAKtB,e,GAPtBe,aAedQ,E,iLAEE,OACI,4BAEQV,KAAKC,MAAMX,KAAKkB,KACZ,SAACC,GAAD,OAAQ,2BAAIA,EAAKtB,e,GANpBe,aAcjBS,EAAQ1B,EAAIqB,EAAMtB,EAAI,gBACtB4B,EAAS3B,EAAIyB,EAAO1B,EAAI,gBAEP6B,E,iLAEb,OACI,6BACI,kBAACF,EAAD,CAASJ,EAAE,IAAIO,EAAE,MACjB,kBAACF,EAAD,W,GALiBV,aC1EtBa,GADIC,IAAMC,gBACLD,IAAMC,iBCEDC,E,iLAEb,OACI,iDAEI,6BAAMlB,KAAKmB,c,GALQjB,aAkBnCgB,EAAME,YAAYL,E,ICnBGM,E,YACjB,aAAc,IAAD,8BACT,+CACKhC,MAAM,CACPiC,MAAK,IAAIC,MAAOC,kBAHX,E,iFAMO,IAAD,OACfxB,KAAKyB,OAAOC,aAAY,WACpB9B,QAAQC,IAAI,GACZ,EAAKC,SAAS,CACVwB,MAAK,IAAIC,MAAOC,qBAEtB,O,6CAGFG,cAAc3B,KAAKyB,U,+BAGnB,OACI,6BACI,4BAAKzB,KAAKX,MAAMiC,MADpB,qBAGI,kBAAC,EAAD,W,GAvBoBpB,a,SCCf0B,E,iLAGb,OACI,6BACI,wBAAIC,MAHF,CAACC,MAAM,SAIL,kBAAC,IAAD,CAAQC,OAAK,EAACC,KAAK,WAAnB,gBACA,4BAAI,kBAAC,IAAD,CAAMC,GAAG,QAAT,QACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,WAAT,iB,GARW/B,a,GCEFA,YCLVA,Y,OCEFgC,E,2MACjBC,QAAQ,SAACC,EAAMC,GACX,EAAKpC,MAAMqC,IAAIF,EAAMC,I,wEAEf,IAAD,OACAE,EAAMvC,KAAKC,MAAXsC,KACL,OACI,6BACI,4BAEQA,EAAK/B,KAAI,SAACC,EAAK2B,GAEX,OAAO,wBAAII,IAAKJ,GAAQ3B,EAAjB,MAAyB,4BAAQgC,QAAS,EAAKN,QAAQO,KAAK,EAAKN,IAAxC,0B,GAZvBlC,aA0BrCgC,EAAQS,aAAa,CACjBJ,KAAK,CAAC,EAAE,EAAE,EAAE,I,oBC5BKK,E,YACjB,aAAc,IAAD,8BACT,+CASJC,aAAa,SAACR,GACV,EAAKvC,SAAL,eACKuC,EAAES,OAAO1C,KAAM2C,SAA0B,KAAjBV,EAAES,OAAOE,MAAW,EAAEX,EAAES,OAAOE,UAZnD,EAebC,YAAY,SAACZ,GAEM,KAAZA,EAAEa,SACD,EAAKjD,MAAMkD,IAAId,EAAES,OAAOE,QAhB5B,EAAKC,YAAY,EAAKA,YAAYP,KAAjB,gBACjB,EAAKrD,MAAM,CACP+D,WAAW,GACX7C,EAAE,GACFO,EAAE,GACFuC,EAAE,IAPG,E,iFAuBTrD,KAAKO,EAAE+C,U,+BAGD,IAAD,OAGL,OACI,6BACI,2BAAOC,QAAQ,OAAf,+CACA,2BAAOC,UAAWxD,KAAKX,MAAMkB,EAAE,GAAG,MAAM,GAAIkD,IAAK,SAACC,GAAO,EAAKnD,EAAEmD,GAAMtD,KAAK,IAAIuD,SAAU3D,KAAK6C,aAAcG,MAAOhD,KAAKX,MAAMkB,EAAGqD,UAAW5D,KAAKiD,YAAajB,KAAK,SAFvK,IAII,2BAAO6B,GAAG,MAAML,UAAU,MAAMpD,KAAK,IAAIuD,SAAU3D,KAAK6C,aAAcG,MAAOhD,KAAKX,MAAMyB,EAAG8C,UAAW5D,KAAKiD,YAAajB,KAAK,SAJjI,IAMI,2BAAOwB,UAAU,MAAMpD,KAAK,IAAIuD,SAAU3D,KAAK6C,aAAcG,MAAOhD,KAAKX,MAAMgE,EAAGO,UAAW5D,KAAKiD,YAAajB,KAAK,SANxH,IAQI,2BAAIhC,KAAKX,MAAMkB,EAAEP,KAAKX,MAAMyB,EAAEd,KAAKX,MAAMgE,GAEzC,2BAAOI,IAAK,SAACC,GAAO,EAAKA,IAAIA,KAC7B,4BAAQ7B,MAAO,CAACiC,MAAM,MAAMC,SAAS,QAAStB,QAAS,WAAK7C,QAAQC,IAAI,EAAK6D,OAA7E,qB,GA1CuBxD,aCClB8D,G,OCIiB9D,Y,OCHDA,Y,2MFAjC+D,YAAY,WACRrE,QAAQC,IAAI,gB,wEAGZ,OACIqE,IAASC,aACL,6BACI,wBAAI1B,QAASzC,KAAKiE,aAAlB,SAEJG,SAASC,U,GAVWnE,cGDfoE,GCCqBpE,Y,2MDCtCiC,QAAQ,SAACC,EAAMC,GACX,EAAKpC,MAAMqC,IAAIF,EAAMC,I,EAGzBkC,SAAS,SAACnC,GACN,EAAKnC,MAAMuE,OAAOpC,I,wEAGZ,IAAD,OACL,OACI,yBAAKqC,MAAM,UACP,wDACA,0BAAMjB,UAAU,OAAOxD,KAAKC,MAAMM,GAClC,4BAEQP,KAAKC,MAAMsC,KAAK/B,KAAI,SAACC,EAAK2B,GACtB,GAAgC,GAA7B,EAAKnC,MAAMsC,KAAKH,GAAOsC,KACtB,OACA,wBAAIlC,IAAKJ,GAAO,2BAAOJ,KAAK,WAAW2B,SAAU,EAAKY,SAAS7B,KAAK,EAAKN,KAAiB3B,EAAKtB,MAA/F,mBAAqH,4BAAQsD,QAAS,EAAKN,QAAQO,KAAK,EAAKN,IAAxC,qBAOrI,yDACA,0BAAMoB,UAAU,OAAOxD,KAAKC,MAAMa,GAClC,4BAEQd,KAAKC,MAAMsC,KAAK/B,KAAI,SAACC,EAAK2B,GACtB,GAAgC,GAA7B,EAAKnC,MAAMsC,KAAKH,GAAOsC,KACtB,OACA,wBAAIlC,IAAKJ,GAAO,2BAAOuC,SAAO,EAAC3C,KAAK,WAAW2B,SAAU,EAAKY,SAAS7B,KAAK,EAAKN,KAAiB3B,EAAKtB,MAAvG,mBAA6H,4BAAQsD,QAAS,EAAKN,QAAQO,KAAK,EAAKN,IAAxC,0B,GAlCtHlC,cEAlB0E,E,2MACjB3B,YAAY,SAACZ,GACM,KAAZA,EAAEa,UACD,EAAKjD,MAAMkD,IAAId,EAAES,OAAOE,OACxBX,EAAES,OAAOE,MAAM,K,wEAIb,IAAD,OACL,OACI,yBAAKQ,UAAU,OACX,2BAAOxB,KAAK,OAAOyB,IAAK,SAACC,GAAO,EAAKnD,EAAEmD,GAAME,UAAW5D,KAAKiD,YAAa4B,YAAY,4C,GAX/D3E,aCGlB4E,G,mBACjB,aAAc,IAAD,uBACT,+CAaJC,QAAQ,SAACzF,GACL,IAAI0F,EAAQ,CACR,MAAQ,GACR,MAAO,GAEXA,EAAQ7F,MAAMG,EACd,EAAKQ,SAAS,CACVyC,KAAK,GAAD,mBAAK,EAAKlD,MAAMkD,MAAhB,CAAqByC,OArBpB,EAyBb7C,QAAQ,SAACC,EAAMC,GACX,IAAIE,EAAK,YAAI,EAAKlD,MAAMkD,MACxBA,EAAK0C,OAAO7C,EAAM,GAClB,EAAKtC,SAAS,CACVyC,UA7BK,EAiCbgC,SAAS,SAACnC,GACN,IAAIG,EAAK,EAAKlD,MAAMkD,KAChBhC,EAAEgC,EAAKH,GAAOsC,KAEdnC,EAAKH,GAAOsC,KADV,GAAHnE,EAMH,EAAKT,SAAS,CACVyC,UAzCJ,IAAIA,EAAK2C,KAAKC,MAAMC,aAAaC,QAAQ,SAFhC,OAIL,EAAKhG,MADC,OAAPkD,EACY,CACPA,KAAK,IAIE,CACPA,KAAKA,GAVJ,E,sEAgDT6C,aAAaE,QAAQ,OAAOJ,KAAKK,UAAUvF,KAAKX,MAAMkD,OACtD,IAAIhC,EAAE,EACFO,EAAE,EASN,OARAd,KAAKX,MAAMkD,KAAKiD,SAAQ,SAASC,GAChB,GAAVA,EAAIf,KACHnE,IAGAO,OAIJ,6BACI,kBAAC,EAAD,CAAWqC,IAAKnD,KAAK+E,UACrB,kBAAC,EAAD,CAAWzC,IAAKtC,KAAKmC,QAASI,KAAMvC,KAAKX,MAAMkD,KAAMiC,OAAQxE,KAAKuE,SAAUhE,EAAGA,EAAGO,EAAGA,S,GA/D7DZ,cC+LxCwF,IAASC,OAAO,kBAAC,EAAD,MAAYvB,SAASwB,eAAe,U","file":"static/js/main.51cc6a13.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nlet url='https://api.apiopen.top/musicRankingsDetails?type=1';\r\nfunction getDisplayName(Com){\r\n    return  Com.displayName || Com.name || 'Component';\r\n}\r\nfunction hoc(Com,url,title){\r\n    class Fetch extends Component{\r\n        constructor(){\r\n            super();\r\n            this.state={\r\n                data:[]\r\n            }\r\n        }\r\n        componentDidMount(){\r\n            //let url='https://api.apiopen.top/musicRankingsDetails?type=1';\r\n        //     Axios.get('https://api.apiopen.top/musicRankingsDetails?type=1').then((res)=>{\r\n        //         console.log(res);\r\n        //         this.setState({\r\n        //             data:res.data.result\r\n        //         })\r\n        //     })\r\n        //默认是get请求，可配置第二个参数，配置请求的信息\r\n            fetch(url,{method:'post'}).then((res)=>res.json()).then((res)=>{\r\n                console.log(res);\r\n                this.setState({\r\n                    data:res.result\r\n                })\r\n            })\r\n        }\r\n        render(){\r\n            return (<div>\r\n                <p>{title}</p>\r\n                {/*传递父组件的属性给子组件*/}\r\n                <Com {...this.props} data={this.state.data}/>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    Fetch.displayName=`Fetch(${getDisplayName(Com)})`;\r\n    // \"Fetch(\"+Com.name+\")\"\r\n    return Fetch;\r\n}\r\n\r\nclass Music extends Component{\r\n    render(){\r\n        return(\r\n            <ul>\r\n                <h1>{this.props.a}</h1>\r\n                {\r\n                    this.props.data.map(\r\n                        (item)=><li>{item.title}</li>\r\n                    )\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nclass Music2 extends Component{\r\n    render(){\r\n        return(\r\n            <ul>\r\n                {\r\n                    this.props.data.map(\r\n                        (item)=><p>{item.title}</p>\r\n                    )\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nlet Mymusic=hoc(Music,url,'列表');\r\nlet Mymusic2=hoc(Music2,url,'段落');\r\n\r\nexport default class Hoc extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Mymusic a=\"1\" b=\"2\"/>\r\n                <Mymusic2/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nexport let con=React.createContext();\r\nexport let con2=React.createContext();\r\n","import React, { Component } from 'react';\r\nimport {con} from \"./Context\"\r\nimport {con2} from \"./Context\"\r\n\r\nexport default class Child extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                child组件\r\n                <div>{this.context}</div>\r\n                {/* <con.Consumer>\r\n                    {\r\n                        (id)=><div>{id}</div>\r\n\r\n                        \r\n                    }\r\n                </con.Consumer> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChild.contextType=con2;\r\n","import React, { Component } from 'react'\r\nimport Child from './Child'\r\n\r\nexport default class Parent extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            time:new Date().toLocaleString()\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.timeId=setInterval(()=>{\r\n            console.log(1)\r\n            this.setState({\r\n                time:new Date().toLocaleString()\r\n            })\r\n        },1000)\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.timeId);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.time}</h1>\r\n                Parent组件\r\n                <Child/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {BrowserRouter as Link} from 'react-router-dom'\r\nimport {Button} from 'antd'\r\n\r\nexport default class Sider extends Component {\r\n    render() {\r\n        let style={float:'left'}\r\n        return (\r\n            <div>\r\n                <ul style={style}>\r\n                    <Button block type=\"primary\">按钮</Button>\r\n                    <li><Link to='/hoc'>hoc</Link></li>\r\n                    <li><Link to='/parent'>parent</Link></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Component} from 'react';\nimport {BrowserRouter as Router,Route,Link} from 'react-router-dom'\nimport Hoc from './Hoc/Hoc';\nimport Parent from './Context/Parent';\nimport Sider from './Sider'\n\nexport default class App extends Component {\n  render() {\n    let style={float:'left',border:'1px solid red',marginLeft:'50px'}\n    return (\n    <Router>\n      <Sider/>\n        <div style={style}>\n            <Route path=\"/hoc\" component={Hoc}/>\n            <Route path=\"/parent\" component={Parent}/>\n        </div>\n    </Router>\n      \n    )\n  }\n}\n\n\n","import React,{Fragment,Component} from 'react';\r\nclass ShowTime extends Component{\r\n    constructor(){\r\n        console.log(\"constuctor\")\r\n        super();\r\n        this.state={\r\n            time:new Date().toLocaleString(),\r\n            a:8,\r\n            b:5\r\n        }\r\n        setInterval(()=>{\r\n            this.setState({\r\n                time:new Date().toLocaleString(),\r\n            })\r\n        })\r\n    }\r\n    shouldComponentUpdate(){\r\n        if(this.state.a>1){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    componentDidUpdate(preProps,preStste,data){\r\n        console.log(\"didupdate\")\r\n        console.log(data);\r\n        console.log(preProps,preStste)\r\n\r\n    }\r\n    getSnapshotBeforeUpdate(){\r\n        console.log(\"beforeupdate\")\r\n        return{name:this.state.a}\r\n    };\r\n\r\n    componentDidMount(){\r\n        console.log(\"didmont\");\r\n    }\r\n    render(){\r\n        console.log(\"render\")\r\n        var {name,age}=this.props;\r\n        return(<Fragment>\r\n            {/* 条件渲染 */}\r\n            {name.length>2?<div>姓名：{name}</div>:''}\r\n            {name.length>2&&<div>姓名：{name}</div>}\r\n            <div>年龄：{age}</div>\r\n            <div>{this.state.time}</div>\r\n            {/*循环渲染 */}\r\n            <div>\r\n                {\r\n                    age.map((item,index)=>{\r\n                        if(index%2===0){\r\n                            return <p key={index}>{item}</p>\r\n                        }\r\n                        \r\n                    })\r\n                }\r\n            </div>\r\n           \r\n        </Fragment>)\r\n    }\r\n}\r\n//默认导出：只能导出一次，被引入时可以重命名\r\nexport default ShowTime;//不加default时，导出的名字要完全相同，还要{}解构赋值\r\n\r\n//命名导出:可以导出多个，被引入时与导出的名一致\r\n/*\r\nexport{ShowTime};\r\n引用：import {sShowTime} from './ShowTime';\r\nexport const num=100;\r\n*/","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Todoing extends Component {\r\n    delItem=(index,e)=>{\r\n        this.props.del(index,e);\r\n    }\r\n    render() {\r\n        var {todo}=this.props;\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        todo.map((item,index)=>{\r\n                            //return <li key={index}>{item}---<button onClick={(e)=>this.props.del(index,e)}>删除</button></li>\r\n                            return <li key={index}>{item}---<button onClick={this.delItem.bind(this,index)}>删除</button></li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//进行类型判断，此时需要引入包\r\nTodoing.propTypes={\r\n    todo:PropTypes.array,\r\n    del:PropTypes.func\r\n}\r\n//设置默认属性值\r\nTodoing.defaultProps={\r\n    todo:[1,2,3,4]\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Todoinput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleInput=this.handleInput.bind(this);\r\n        this.state={\r\n            inputValue:'',\r\n            a:\"\",\r\n            b:\"\",\r\n            c:\"\"\r\n        }\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:parseInt(e.target.value===\"\"?0:e.target.value)\r\n        })\r\n    }\r\n    handleInput=(e)=>{\r\n        //绑定this，事件处理函数写成箭头函数，或者用bind\r\n        if(e.keyCode===13){\r\n            this.props.add(e.target.value);\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        this.a.focus();\r\n        //this.refs.a.focus(<inpute ref=\"a\">)\r\n    }\r\n    render() {\r\n        //受控组件：value值被react控制的表单元素\r\n        //可以实时获取表单元素的值（表单验证）/写法相对麻烦\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"inp\">请输入第2个数：</label>\r\n                <input className={this.state.a>10?'red':''} ref={(inp)=>{this.a=inp}} name=\"a\" onChange={this.handleChange} value={this.state.a} onKeyDown={this.handleInput} type=\"text\"></input>\r\n                +\r\n                <input id='inp' className=\"box\" name=\"b\" onChange={this.handleChange} value={this.state.b} onKeyDown={this.handleInput} type=\"text\"></input>\r\n                +\r\n                <input className=\"box\" name=\"c\" onChange={this.handleChange} value={this.state.c} onKeyDown={this.handleInput} type=\"text\"></input>\r\n                =\r\n                <p>{this.state.a+this.state.b+this.state.c}</p>\r\n                {/*非受控组件:一次性获取或处理表单元素的值 */}\r\n                <input ref={(inp)=>{this.inp=inp}}></input>\r\n                <button style={{color:'red',fontSize:'20px'}} onClick={()=>{console.log(this.inp)}}>提交</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/**\r\n * 受控组件：(类，状态，事件)\r\n * 1、给input标签添加value属性，赋值为state的值\r\n * 2、给input标签绑定onChange事件，在事件处理函数中setState\r\n * 3、一个事件处理函数控制多个表单元素时，给input标签加上name属性，事件处理函数中写:\r\n *   setState({[e.target.name]:e.target.value})\r\n */\r\n","import React, { Component } from 'react';\r\nimport ReactDom from \"react-dom\"\r\n\r\nexport default class Portal extends Component {\r\n    handleClick=()=>{\r\n        console.log('portalClick')\r\n    }\r\n    render() {\r\n        return (\r\n            ReactDom.createPortal(\r\n                <div>\r\n                    <h1 onClick={this.handleClick}>YIBO</h1>\r\n                </div>,\r\n                document.body\r\n            )\r\n            \r\n        )\r\n    }\r\n}\r\n","//rcc\r\n//Todoinput,Todoing引入到该文件里，将该文件引入到index里\r\nimport React, { Component } from 'react';\r\nimport Todoing from './Todoing';\r\nimport Todoinput from './Todoinput'\r\nimport './todo.css' \r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            todo:[1,2,3]\r\n        }\r\n        //深拷贝/浅拷贝\r\n        //只要出现一个{}就是一个新的对象\r\n        var obj={a:100,b:[1,2,3]};\r\n        var obj1={c:11}\r\n        //var o=obj;\r\n        //var o={...obj};\r\n        //var o=JSON.parse(JSON.stringify(obj));//深拷贝\r\n        var o=Object.assign(obj,obj1);//obj1上的内容会整合到obj上//浅拷贝\r\n        o.a=200;\r\n        o.b[0]=100;\r\n        console.log(obj,o);\r\n\r\n        console.log(Object.keys(obj));\r\n        Object.keys(obj).forEach((item)=>{\r\n            console.log(item);\r\n            console.log(obj[item])\r\n        });\r\n        \r\n    }\r\n    addItem=(data)=>{\r\n        //this.state.todo.push(data);\r\n        //console.log(this.state.todo);\r\n        this.setState({\r\n            todo:[...this.state.todo,data]\r\n        })\r\n    }\r\n    delItem=(index,e)=>{\r\n        /**\r\n         * 1、不能直接改变state，通过setState改变\r\n         * 2、setState是异步执行的\r\n         */\r\n        //console.log(index,e);\r\n        let todo=[...this.state.todo];\r\n        todo.splice(index,1);\r\n        // this.staState((state,props)=>{\r\n        //     console.log(state);//获得之前的state\r\n        //     console.log(props);//得到当前的props\r\n        //     return{\r\n        //         todo:todo\r\n        //     }\r\n        // })\r\n        //在setState里获取state可能会出错，不是想要的值，可以像上面那样，把第一个参数写成函数，函数的第一个参数state是发生改变之前的state\r\n        this.setState({\r\n            todo\r\n        },()=>{\r\n            console.log(this.state.todo);//回调函数会在setState执行完成后执行\r\n        })\r\n        console.log(this.state.todo)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Todoinput add={this.addItem}/>\r\n                <Todoing del={this.delItem} todo={this.state.todo}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n//数据请求：AXios\r\nimport Axios from 'axios';\r\n//import {fetch} from 'whatwg-fetch';\r\nexport default class Request extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            data:[]\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        let url='https://api.apiopen.top/musicRankingsDetails?type=1';\r\n    //     Axios.get('https://api.apiopen.top/musicRankingsDetails?type=1').then((res)=>{\r\n    //         console.log(res);\r\n    //         this.setState({\r\n    //             data:res.data.result\r\n    //         })\r\n    //     })\r\n    //默认是get请求，可配置第二个参数，配置请求的信息\r\n        fetch(url,{method:'post'}).then((res)=>res.json()).then((res)=>{\r\n            console.log(res);\r\n            this.setState({\r\n                data:res.result\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <h1>数据请求：</h1>\r\n                <ul>\r\n                    {\r\n                        this.state.data.map(\r\n                            (item,idx)=><li key={idx}>\r\n                                <p>歌名：{item.title}</p>\r\n                                <p>作者：{item.author}</p>\r\n                            </li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TodoChild extends Component {\r\n\r\n    delItem=(index,e)=>{\r\n        this.props.del(index,e);\r\n    }\r\n\r\n    changeUl=(index)=>{\r\n        this.props.change(index);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"conten\">\r\n                <h2>待办事项</h2>\r\n                <span className=\"num\">{this.props.a}</span>\r\n                <ul>\r\n                    {\r\n                        this.props.todo.map((item,index)=>{\r\n                            if(this.props.todo[index].done==false){\r\n                                return (\r\n                                <li key={index}><input type=\"checkbox\" onChange={this.changeUl.bind(this,index)}></input>{item.title}----------------<button onClick={this.delItem.bind(this,index)}>删除</button></li>\r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </ul>\r\n                <h2>完成事项 </h2>\r\n                <span className=\"num\">{this.props.b}</span>\r\n                <ul>\r\n                    {\r\n                        this.props.todo.map((item,index)=>{\r\n                            if(this.props.todo[index].done==true){\r\n                                return (\r\n                                <li key={index}><input checked type=\"checkbox\" onChange={this.changeUl.bind(this,index)}></input>{item.title}----------------<button onClick={this.delItem.bind(this,index)}>删除</button></li>\r\n                                )\r\n                            }\r\n                            \r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Portal from './Portal'\r\n\r\nexport default class ParentPortal extends Component {\r\n    handleClick=()=>{\r\n        console.log('ParentportalClick')\r\n    }\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick}>\r\n                <Portal/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TodoInput extends Component {\r\n    handleInput=(e)=>{\r\n        if(e.keyCode===13){\r\n            this.props.add(e.target.value);\r\n            e.target.value=\"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"top\">\r\n                <input type=\"text\" ref={(inp)=>{this.a=inp}} onKeyDown={this.handleInput} placeholder=\"在这里添加ToDo\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TodoChild from './TodoChild';\r\nimport TodoInput from './TodoInput'\r\nimport \"./Todo.css\"\r\n\r\nexport default class TodoParent extends Component {\r\n    constructor(){\r\n        super();\r\n        let todo=JSON.parse(localStorage.getItem('todo'));\r\n        if(todo===null){\r\n            this.state={\r\n                todo:[]\r\n            }\r\n        }\r\n        else{\r\n            this.state={\r\n                todo:todo\r\n            }\r\n        }\r\n    }\r\n    addItem=(data)=>{\r\n        var dataObj={\r\n            \"title\":\"\",\r\n            \"done\":false\r\n        }\r\n        dataObj.title=data;\r\n        this.setState({\r\n            todo:[...this.state.todo,dataObj]\r\n        })\r\n    }\r\n\r\n    delItem=(index,e)=>{\r\n        let todo=[...this.state.todo];\r\n        todo.splice(index,1);\r\n        this.setState({\r\n            todo\r\n        })\r\n    }\r\n\r\n    changeUl=(index)=>{\r\n        var todo=this.state.todo;\r\n        var a=todo[index].done;        \r\n        if(a==true){\r\n            todo[index].done=false\r\n        }\r\n        else{\r\n            todo[index].done=true\r\n        }\r\n        this.setState({\r\n            todo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        localStorage.setItem(\"todo\",JSON.stringify(this.state.todo));\r\n        var a=0;\r\n        var b=0;\r\n        this.state.todo.forEach(function(ele){\r\n            if(ele.done==false){\r\n                a++;\r\n            }\r\n            else{\r\n                b++;\r\n            }\r\n        })\r\n        return (\r\n            <div>\r\n                <TodoInput add={this.addItem}/>\r\n                <TodoChild del={this.delItem} todo={this.state.todo} change={this.changeUl} a={a} b={b} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ShowTime from './ShowTime';\nimport Todolist from './ToDoList/Todolist'\nimport Request from './Request.js'\nimport Parent from './Context/Parent';\nimport {con} from './Context/Context';\nimport {con2} from './Context/Context';\nimport Hoc from './Hoc/Hoc';\nimport Portal from \"./Portal/Portal\";\nimport ParentPortal from \"./Portal/ParentPortal\"\nimport TodoList from './Work1/TodoList'\n//import * as serviceWorker from './serviceWorker';\n\n//react 技术栈\n//jsx语法\n//var str=\"0805\";\n//babel编译返回一个对象\n//var ele=<h1 class=\"tit\">YIBO{str}</h1>\n/*var ele=React.createElement('h1',{id:\"tit\",class:\"title\"},\"YIBO\",React.createElement(\"p\",{id:\"t\"},\"0805\"));\nconsole.log(ele);\nReactDOM.render(ele, document.getElementById('root'));*/\n//自己封装render函数\nvar obj={\n    type:\"div\",\n    props:{\n        id:\"box\",\n        class:\"box\",\n        children:['YIBO','0805',\n        {\n            type:\"h1\",\n            props:{\n                id:\"tit\",\n                class:\"tit\",\n                children:['YIBO','0805',]\n                \n            }\n        \n        }]\n    }\n}\nfunction render(obj,container){\n    var{type,props}=obj;\n    //文档碎片\n    var fragment=document.createDocumentFragment();\n   var ele=document.createElement(type);\n   for(var item in props){\n       if(item===\"class\"){\n           ele.className=props[item];\n       }\n       else if(item===\"children\"){\n           for(var i=0;i<props[item].length;i++){\n               //ele.innerHtml+=props.children[i];\n               if(typeof props.children[i]==='object'){\n                   render(props.children[i],ele)\n               }\n               else{\n                   var txt=document.createTextNode(props.children[i]);\n                   ele.appendChild(txt);\n               }\n               \n           }\n       }\n       else{\n         ele[item]=props[item];  \n       }\n   }\n   fragment.appendChild(ele);\n   container.appendChild(fragment);\n}\n//render(obj,document.getElementById('root'))\n\n\n//页面渲染过程\n/**\n * 请求HTML页面、浏览器HTML解析器解析html文件、生成DOM树、\n * link引入css文件、css解析器解析CSS，生成CSS对象模型，CSSOM和DOM tree结合生成一个render tree（渲染树），最后浏览器绘制页面\n */\n//页面回流（重排reflow）：DOM结构变化，内容变化，大小、位置、显示的变化\n//页面重绘（repaint）：颜色的变化（背景色，字体颜色，边框颜色）\n\n//1、先用变量进行DOM处理，最后一次渲染\n/*console.time('time')\nvar div=document.getElementById('root');\nvar str='';\nfor(var i=0;i<1000;i++){\n\n    str+='<p>'+i+'</p>';\n}\ndiv.innerHTML=str;\nconsole.timeEnd('time')*/\n\n//2、对于样式的处理,声明一个css类\n/*var div=document.getElementById('root');\ndiv.style.width='100px';\ndiv.style.height='100px';\ndiv.style.background='red';\n//写css里\ndiv.className='active';*/\n\n//3、offsetLeft、offsetTop、offsetWidth等都会引起回流\n/*var wid=div.offsetWidth;\nsetInterval(()=>{\n    wid+=1\n    div.style.width=wid+'px';\n},100)*/\n\n//4、文档碎片（内存中的一个变量）\n\n\n\n/*------------------------------------------------------------------------------------------------------ */\n\n//显示当前系统时间\n/*\nfunction time(){\n    var ele=<div>\n        <p>当前时间是：</p>\n        {new Date().toLocaleString()}\n    </div>;\n    ReactDOM.render(ele,document.querySelector('#root'));\n}\ntime();\nsetInterval(time,1000);\n*/\n\n\n/*------------------------------------------------------------------------------------------------------- */\n/*\nfunction ShowTime(props){\n    console.log(props)\n    //解构赋值\n    return(<Fragment>\n        <div>{props.name}</div>\n        <div>{new Date().toLocaleString()}</div>\n        <div>{props.age}</div>\n    </Fragment>) \n}\n*/\n//类定义组件 ShowTime.js\n/*\nvar num=[1,2,3,4,5];\nReactDOM.render(<ShowTime name='YIBO' age={num}/>,document.getElementById('root'));\n*/\n\n\n/*------------------------------------------------10.12--------------------------------------------------------*/\n\n\n//组件交互\n/**\n * 父组件-->子组件：调用子组件时添加属性，子组件通过props拿到传递的数据\n * 子组件-->父组件：todo文件夹\n */\n\n\n\n /*------------------------------------------------10.15--------------------------------------------------------- */\n //Context\n /**\n  * 1、生成Context，可写在一个js文件中，export导出\n  * 2、在根组件import Provider，并配合Provider，加上value属性\n  * 3、在需要获取的组件import Consumer，配置Consumer\n  * Consumer组件里是一个函数，函数的参数是传过来的value值\n  */\n// let id= 1234;\n// ReactDOM.render(\n//     <con.Provider value={id}>\n//         <div>ddd</div>\n//         <con2.Provider value=\"aaa\">\n//             <Parent/>\n//         </con2.Provider>\n        \n//     </con.Provider>\n//     ,document.getElementById(\"root\")\n// );\n\n\n\n\n// ReactDOM.render(<Hoc/>,document.getElementById(\"root\"));\n\n\n\n\n\n\n\n//serviceWorker.unregister();\n\n\n/*----------------------------------------------10.16----------------------------------------------------------- */\n\n// ReactDOM.render(<ParentPortal/>,document.getElementById(\"root\"));\nReactDOM.render(<TodoList/>,document.getElementById(\"root\"));\n\n"],"sourceRoot":""}